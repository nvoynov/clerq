require_relative '../spec_helper'

describe 'pandoc.md.erb' do

  # TODO to complicated and should be tested from MarkupNode actually
  #      and MarkupNode itself should by extracted from erb and
  #      placed somewhere in 'lib'

  let(:template) {
    body = File.read('lib/assets/tt/pandoc.md.erb')
    body.gsub(/^% generated by Clerq(.)*$/, '% generated by Clerq')
  }

  let(:assembly) {
    Node.new(title: 'Pandoc Spec').tap do |n|
      n << Node.new(title: 'Spec meta', id: 'p01')
      n << Node.new(title: 'Skip meta', id: 'p02', meta: {skip_meta: true})
    end
  }

  let(:sample) {
    <<~EOF
      % Pandoc Spec
      % generated by Clerq
      % pandoc template

      # Spec meta {#p01}

      Attribute | Value
      --------- | -----
      id | p01

      # Skip meta {#p02}

    EOF
  }

  it 'assembly rendering must match to the sample' do
    out = Clerq::RenderErb.(erb: template, object: assembly)
    _(out).must_match sample
  end

end
